package hw05;

import java.util.ArrayList;

public class Inventory {
	private ArrayList<Case> cases = new ArrayList<Case>();
	private ArrayList<MotherBoard> motherBoards = new ArrayList<MotherBoard>();
	private ArrayList<Processor> processors = new ArrayList<Processor>();
	private ArrayList<Memory> memory = new ArrayList<Memory>();
	private ArrayList<HardDrive> hardDrives = new ArrayList<HardDrive>();
	private ArrayList<Monitor> monitors = new ArrayList<Monitor>();
	private ArrayList<VideoCard> videoCards = new ArrayList<VideoCard>();
	
	public Inventory()
	{
	}
	public void initializeInventory()
	{
		Case pcCase1 = new Case("Cooler Master Masterbox", "Cooler Master", "MCB-Q300L-KANN-S00", 44.99, "MicroATX Mini Tower", "Black");
		Case pcCase2 = new Case("In Win D-Frame 2.0", "In Win", "D-Frame 2.0 BK/GO", 199, "ATX Full Tower", "Black / Gold");
		Case pcCase3 = new Case("Corsair iCUE 4000X RGB", "Corsair", "CC-9011205-WW", 130.99, "ATX Mid Tower", "White");
		this.cases.add(pcCase1);
		this.cases.add(pcCase2);
		this.cases.add(pcCase3);
		
		MotherBoard pcMother1 = new MotherBoard("Asus TUF GAMING X570-PLUS", "Asus", "90MB1170-MVAAY0", 188.99, "AM4", "ATX");
		MotherBoard pcMother2 = new MotherBoard("Gigabyte Z390 AORUS PRO", "Gigabyte", "GA-Z390-AORUS-PRO-WIFI", 189.99, "LGA1151", "ATX");
		MotherBoard pcMother3 = new MotherBoard("MSI B450M PRO-M2 MAX", "MSI", "7B84-017R", 78.98, "AM4", "Micro ATX");
		this.motherBoards.add(pcMother1);
		this.motherBoards.add(pcMother2);
		this.motherBoards.add(pcMother3);
		
		Processor pcProcessor1 = new Processor("Intel Core i9-9900K", "Intel", "BX80684I99900K", 399.99, "3.6 GHz", 8);
		Processor pcProcessor2 = new Processor("AMD Ryzen 9 3950X", "AMD", "100-100000051WOF", 719.99, "3.5 GHz", 16);
		Processor pcProcessor3 = new Processor("Intel Core i7-5960X", "Intel", "BX80648I75960X", 799.99, "3.5 GHz", 8);
		this.processors.add(pcProcessor1);
		this.processors.add(pcProcessor2);
		this.processors.add(pcProcessor3);
		
		VideoCard pcVideo1 = new VideoCard("GeForce RTX 3090", "NVIDIA", "900-1G136-2510-000", 1499.99, "24 GB", "1395 MHz");
		VideoCard pcVideo2 = new VideoCard("Titan V", "NVIDIA", "900-1G500-2500-000", 2756.99, "12 GB", "1200 MHz");
		VideoCard pcVideo3 = new VideoCard("Radeon RX 5700 XT", "Radeon", "RX 5700 XT 8G", 449.99, "8 GB", "1605 MHz");
		this.videoCards.add(pcVideo1);
		this.videoCards.add(pcVideo2);
		this.videoCards.add(pcVideo3);
		
		HardDrive pcHard1 = new HardDrive("Samsung 970 Evo 1 TB", "Samsung", "MZ-V7E1T0BW", 168.28, "SSD", "1 TB");
		HardDrive pcHard2 = new HardDrive("Seagate BarraCuda", "Seagate", "ST1000DM010", 49.99, "7200RPM", "1 TB");
		HardDrive pcHard3 = new HardDrive("Western Digital Blue 2 TB", "Western Digital", "WD70000444", 49.99, "5400RPM", "2 TB");
		this.hardDrives.add(pcHard1);
		this.hardDrives.add(pcHard2);
		this.hardDrives.add(pcHard3);
		
		Memory pcMemory1 = new Memory("Corsair Vengeance RGB", "Corsair", "CMW32GX4M2C3200C16", 131.99, "288-pin DIMM", "2 x 16GB");
		Memory pcMemory2 = new Memory("Crucial Ballistix 16 GB", "Crucial", "BL2K8G32C16U4B", 59.99, "288-pin DIMM", "2 x 8GB");
		Memory pcMemory3 = new Memory("Samsung 8 GB", "Samsung", "MV-3V4G3D/US", 306.36, "240-pin DIMM", "2 x 4GB");	
		this.memory.add(pcMemory1);
		this.memory.add(pcMemory2);
		this.memory.add(pcMemory3);
		
		Monitor pcMonitor1 = new Monitor("Samsung U28E590D", "Samsung", "U28E590D", 357.68, "28 inch", "3840 x 2160");
		Monitor pcMonitor2 = new Monitor("Razer RAPTOR 27", "Razer", "RZ39-02760100-R3U1", 699.99, "27 inch", "2560 x 1440");
		Monitor pcMonitor3 = new Monitor("Samsung C49RG9", "Samsung", "LC49RG90SSNXZA", 1199.99, "49 inch", "5120 x 1440");
		this.monitors.add(pcMonitor1);
		this.monitors.add(pcMonitor2);
		this.monitors.add(pcMonitor3);
	}
	// getter methods for the ArrayList objects
	public Case getCase(int index)
	{
		return this.cases.get(index);
	}
	public MotherBoard getMotherBoard(int index)
	{
		return this.motherBoards.get(index);
	}
	public Processor getProcessor(int index)
	{
		return this.processors.get(index);
	}
	public Memory getMemory(int index)
	{
		return this.memory.get(index);
	}
	public HardDrive getHardDrive(int index)
	{
		return this.hardDrives.get(index);
	}
	public Monitor getMonitor(int index)
	{
		return this.monitors.get(index);
	}
	public VideoCard getVideoCard(int index)
	{
		return this.videoCards.get(index);
	}
	// print methods to print each object class
	public void printCases()
	{
		for(int i = 0; i < this.cases.size(); i++)
		{
			System.out.println("Case: " + (i + 1) + this.getCase(i).toString() + "\n");
		}
	}
	public void printMotherBoards()
	{
		for(int i = 0; i < this.motherBoards.size(); i++)
		{
			System.out.println("MotherBoard: " + (i + 1) + this.motherBoards.get(i).toString() + "\n");
		}
	}
	public void printProcessors()
	{
		for(int i = 0; i < this.processors.size(); i++)
		{
			System.out.println("Processor: " + (i + 1) + this.processors.get(i).toString() + "\n");
		}
	}
	public void printMemory()
	{
		for(int i = 0; i < this.memory.size(); i++)
		{
			System.out.println("Memory: " + (i + 1) + this.memory.get(i).toString() + "\n");
		}
	}
	public void printHardDrives()
	{
		for(int i = 0; i < this.hardDrives.size(); i++)
		{
			System.out.println("Harddrive: " + (i + 1) + this.hardDrives.get(i).toString() + "\n");
		}
	}
	public void printMonitors()
	{
		for(int i = 0; i < this.monitors.size(); i++)
		{
			System.out.println("Monitor: " + (i + 1) + this.monitors.get(i).toString() + "\n");
		}
	}
	public void printVideoCards()
	{
		for(int i = 0; i < this.videoCards.size(); i++)
		{
			System.out.println("Video Card: " + (i + 1) + this.videoCards.get(i).toString() + "\n");
		}
	}	
	
}
