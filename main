//Author: Mina Mekhaiel
// Assignment #5

package hw05;

import java.util.ArrayList;
import java.util.Scanner;

public class Main {
	static Scanner in = new Scanner(System.in);
	public static void main(String[] args) {
		System.out.println("*****Welcome to the computer store*****");
		main_menu(); // calling the main_menu method
	}
	
	public static void main_menu()
	{
		Inventory inv = new Inventory(); // creating an inventory object
		inv.initializeInventory(); // calling the initialize method to display options of each pc part
		// creating a PC object
		PC pc = new PC();  
		// prompt the user variable 1
		int choice;
		// prompt the user variable 2
		do
		{
			// displaying the main menu options
			System.out.println("\n***Main Menu***");
			System.out.println("\n1.Choose a case\n2.Choose a motherboard\n3.Choose a Monitor\n4.Choose a CPU\n"
					+ "5.Choose a video Card\n6.Choose a Hard Drive\n7.Choose a Memory\n8.Display Receipt\n9.Exit program");
			choice = in.nextInt(); // prompt the user
			switch(choice)
			{
			case 1:
				// printing the case options
				inv.printCases();
				// calling the method to choose from options
				tower(inv, pc);
				break;
			case 2: 
				// printing the motherboard options
				inv.printMotherBoards();
				// calling the method to choose from options
				motherb(inv, pc);
				break;
			case 3:
				// printing the monitor options
				inv.printMonitors();
				// calling the method to choose from options
				monitor(inv, pc);
				break;
			case 4:
				// printing the processor options
				inv.printProcessors();
				// calling the method to choose from options
				processor(inv, pc);
				break;
			case 5:
				// printing the video card options
				inv.printVideoCards();
				// calling the method to choose from options
				video(inv, pc);
				break;
			case 6:
				// printing the hard drive options
				inv.printHardDrives();
				// calling the method to choose from options
				hard(inv, pc);
				break;
			case 7:
				// printing the memory options
				inv.printMemory();
				// calling the method to choose from options
				memory(inv, pc);	
				break;
			case 8:
				// displaying the built PC and the total cost
				System.out.println("\nYour built PC: \n" + pc);
				System.out.printf("Receipt with total cost: %.3f", pc.computeTotalCost());
				break;
			case 9:
				System.out.println("Goodbye");
				System.exit(0); // exit the program
			}
		}while(choice < 9);
	}
	// method to prompt the user for the second menu options
	public static PC tower(Inventory inv, PC pc)
	{
		int choice = prompt2();	
		if(choice == 1 || choice == 2 || choice == 3)
		{	
			System.out.print(inv.getCase(choice - 1));
			pc.addCase(inv.getCase(choice - 1));	
		}
		return pc; // returning the object
	}	
	// motherboard method
	public static PC motherb(Inventory inv, PC pc)
	{
		int choice = prompt2();		
		if(choice == 1 || choice == 2 || choice == 3)
		{	
			System.out.print(inv.getMotherBoard(choice - 1));
			pc.addMotherBoard(inv.getMotherBoard(choice - 1));	
		}
		return pc; // returning the object
	}
	// monitor method
	public static PC monitor(Inventory inv, PC pc)
	{
		int choice = prompt2();	
		if(choice == 1 || choice == 2 || choice == 3)
		{	
			System.out.print(inv.getMonitor(choice - 1));
			pc.addMonitor(inv.getMonitor(choice - 1));	
		}
		return pc; // returning the object
	}
	// processor method
	public static PC processor(Inventory inv, PC pc)
	{
		int choice = prompt2();		
		if(choice == 1 || choice == 2 || choice == 3)
		{	
			System.out.print(inv.getProcessor(choice - 1));
			pc.addProcessor(inv.getProcessor(choice - 1));	
		}	
		return pc; // returning the object
	}
	// video method
	public static PC video(Inventory inv, PC pc)
	{
		int choice = prompt2();	
		if(choice == 1 || choice == 2 || choice == 3)
		{	
			System.out.print(inv.getVideoCard(choice - 1));
			pc.addVideoCard(inv.getVideoCard(choice - 1));	
		}
		return pc; // returning the object
	}
	// hard drive method
	public static PC hard(Inventory inv, PC pc)
	{
		int choice = prompt2();	
		if(choice == 1 || choice == 2 || choice == 3)
		{	
			System.out.print(inv.getHardDrive(choice - 1));
			pc.addHardDrive(inv.getHardDrive(choice - 1));	
		}	
		return pc; // returning the object
	}
	// memory method
	public static PC memory(Inventory inv, PC pc)
	{
		int choice = prompt2();	
		if(choice == 1 || choice == 2 || choice == 3)
		{	
			System.out.print(inv.getMemory(choice - 1));
			pc.addMemory(inv.getMemory(choice - 1));	
		}
		return pc; // returning the object
	}
	public static int prompt2()
	{
		System.out.println("Choose from the options (1-3): ");
		int choice = in.nextInt();
		return choice;
	}
}
